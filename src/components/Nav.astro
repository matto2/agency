---
import Logo from "./Logo.astro";
import NavSocials from "./NavSocials.astro";
---

<nav
  class="mt-4 lg:flex lg:justify-between lg:items-center mx-4 2xl:mx-0 relative z-50"
>
  <div class="text-center lg:flex lg:items-center">
    <Logo />
  </div>
  <div class="flex justify-center items-center lg:ml-auto">
    <div
      class="flex items-center space-x-4 text-slate-700 text-lg font-heading"
    >
      <a
        href="/"
        data-link="work"
        class="hover:text-black cursor-pointer font-medium">Work</a
      >
      <a
        href="/about"
        data-link="about"
        class="hover:text-black cursor-pointer font-medium">About</a
      >
      <a
        href="/contact"
        data-link="contact"
        class="hover:text-black cursor-pointer font-medium">Contact</a
      >
      <a
        href="https://www.linkedin.com/in/matthew-oleary-ux/"
        target="_blank"
        rel="noopener noreferrer"
        class="hover:text-blue-600 transition-colors"
        aria-label="LinkedIn Profile"
      >
        <svg
          class="w-6 h-6 fill-current"
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"
          ></path>
        </svg>
      </a>
    </div>
  </div>
</nav>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const setActiveNavLink = () => {
      const navLinks = document.querySelectorAll("nav a");
      const currentPath = window.location.pathname;

      navLinks.forEach((link) => {
        const anchor = link as HTMLAnchorElement;
        const linkPath = new URL(anchor.href).pathname;
        const dataLink = anchor.getAttribute("data-link");

        anchor.classList.remove("active");

        if (currentPath.startsWith(`/${dataLink}`)) {
          anchor.classList.add("active");
        } else if (linkPath === currentPath) {
          anchor.classList.add("active");
        }
      });
    };

    setActiveNavLink();

    document.addEventListener("astro:after-swap", setActiveNavLink);
    window.addEventListener("popstate", setActiveNavLink);

    const originalPushState = history.pushState;
    history.pushState = function (...args) {
      originalPushState.apply(this, args);
      window.dispatchEvent(new Event("pushstate"));
      window.dispatchEvent(new Event("locationchange"));
    };

    const originalReplaceState = history.replaceState;
    history.replaceState = function (...args) {
      originalReplaceState.apply(this, args);
      window.dispatchEvent(new Event("replacestate"));
      window.dispatchEvent(new Event("locationchange"));
    };

    window.addEventListener("locationchange", setActiveNavLink);
  });
</script>

<style>
  .active {
    font-weight: bold;
    color: #4f46e5;
    text-decoration-line: none;
  }
</style>
